using BlueprintCore.Blueprints.Configurators.Items;
using BlueprintCore.Blueprints.Configurators.Items.Equipment;
using BlueprintCore.Blueprints.CustomConfigurators.Classes.Selection;
using BlueprintCore.Blueprints.CustomConfigurators.Classes;
using BlueprintCore.Blueprints.References;
using Kingmaker.Blueprints.Classes.Prerequisites;
using Kingmaker.Utility;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using BlueprintCore.Utils;
using Kingmaker.Blueprints.Classes;
using Kingmaker.Blueprints.Classes.Selection;
using EbonsContentMod.Utilities;

namespace EbonsContentMod.Feats
{
    internal class ArcanistExploits
    {
        private const string ArcanistOppositionResearch = "ArcanistOppositionResearch";
        internal const string ArcanistOppositionResearchDisplayName = "ArcanistOppositionResearch.Name";
        private const string ArcanistOppositionResearchDescription = "ArcanistOppositionResearch.Description";
        public static readonly string ArcanistOppositionResearchGuid = "{612E445B-37C6-4EC8-AA52-7A64F7A7640F}";

        internal static void ModifyOppositionResearchFeatures()
        {
            // Abjuration Feature
            FeatureConfigurator.For("d152271d3a97421f8315c27c3b06f576")
                .RemoveComponents(c => c is PrerequisiteFeature)
                .AddPrerequisiteFeature("38cb4b3fb92cac74a9927068dd5e9ea4", group: Prerequisite.GroupType.Any)
                .AddPrerequisiteFeature("697074402cc929a48b2050d51da3062b", group: Prerequisite.GroupType.Any)
                .AddPrerequisiteFeature("7f8c1b838ff2d2e4f971b42ccdfa0bfd", group: Prerequisite.GroupType.Any)
                .Configure();

            // Conjuration Feature
            FeatureConfigurator.For("70ccb72b5b6c487796f96a4ed6fd6af1")
                .RemoveComponents(c => c is PrerequisiteFeature)
                .AddPrerequisiteFeature("0ce4db028b00b6d4e983e140899f0f26", group: Prerequisite.GroupType.Any)
                .AddPrerequisiteFeature("158dcfeb67baf9a4288f348a7211e46b", group: Prerequisite.GroupType.Any)
                .AddPrerequisiteFeature("ca4a0d68c0408d74bb83ade784ebeb0d", group: Prerequisite.GroupType.Any)
                .Configure();

            // Divination Feature
            FeatureConfigurator.For("69eb87c17b034ac1bf7b5e687e5e895d")
                .RemoveComponents(c => c is PrerequisiteFeature)
                .AddPrerequisiteFeature("8387d5460ee5baa4eac03a55768e1cf0", group: Prerequisite.GroupType.Any)
                .AddPrerequisiteFeature("df49e0d39e43b934bbe2621e1741a1b1", group: Prerequisite.GroupType.Any)
                .AddPrerequisiteFeature("09595544116fe5349953f939aeba7611", group: Prerequisite.GroupType.Any)
                .Configure();

            // Enchantment Feature
            FeatureConfigurator.For("b3bcbab2afef402982efab99332e8858")
                .RemoveComponents(c => c is PrerequisiteFeature)
                .AddPrerequisiteFeature("10e5a9a30af6c5d49b37c842507ab3b4", group: Prerequisite.GroupType.Any)
                .AddPrerequisiteFeature("c64aa71b41e93dd4ea950d30e9353c30", group: Prerequisite.GroupType.Any)
                .AddPrerequisiteFeature("875fff6feb84f5240bf4375cb497e395", group: Prerequisite.GroupType.Any)
                .Configure();

            // Evocation Feature
            FeatureConfigurator.For("b611619472ce46ffb993a89d5e304038")
                .RemoveComponents(c => c is PrerequisiteFeature)
                .AddPrerequisiteFeature("13671fba5a1e4c04893c1b496679579e", group: Prerequisite.GroupType.Any)
                .AddPrerequisiteFeature("814c8136306e6674993b2efbbb4bf680", group: Prerequisite.GroupType.Any)
                .AddPrerequisiteFeature("c3724cfbe98875f4a9f6d1aabd4011a6", group: Prerequisite.GroupType.Any)
                .Configure();

            // Illusion Feature
            FeatureConfigurator.For("2046f249043344d181e04babfb00fa11")
                .RemoveComponents(c => c is PrerequisiteFeature)
                .AddPrerequisiteFeature("92ce70878de20344d8c250735021aec0", group: Prerequisite.GroupType.Any)
                .AddPrerequisiteFeature("710d4180394f23e41abb5b31ebb4816b", group: Prerequisite.GroupType.Any)
                .AddPrerequisiteFeature("6750ead44c0c034428c6509c68110375", group: Prerequisite.GroupType.Any)
                .Configure();

            // Necromancy Feature
            FeatureConfigurator.For("59057090e999443a9573873c1cf9a0ce")
                .RemoveComponents(c => c is PrerequisiteFeature)
                .AddPrerequisiteFeature("a9bb3dcb2e8d44a49ac36c393c114bd9", group: Prerequisite.GroupType.Any)
                .AddPrerequisiteFeature("a100dbfb2e9eb084c82a25060b8d1017", group: Prerequisite.GroupType.Any)
                .AddPrerequisiteFeature("3c4dbb033d5ebc345960f35454614e09", group: Prerequisite.GroupType.Any)
                .Configure();

            // Transmutation Feature
            FeatureConfigurator.For("1ff4a7625d0742ebb52b16e9619a648f")
                .RemoveComponents(c => c is PrerequisiteFeature)
                .AddPrerequisiteFeature("6e770c3ad80517a4dbc55acd3306ad99", group: Prerequisite.GroupType.Any)
                .AddPrerequisiteFeature("4bdc3590e1c91b348af8b6163217b66f", group: Prerequisite.GroupType.Any)
                .AddPrerequisiteFeature("fc519612a3c604446888bb345bca5234", group: Prerequisite.GroupType.Any)
                .Configure();
        }
        
        internal static void Configure()
        {
            if (!CheckerUtilities.GetModActive("TabletopTweaks-Base")) return;

            var ArcaneDiscoverySelectionGuid = "45b72087ac2d4554aec4f44be852eddd";

            ModifyOppositionResearchFeatures();

            // Opposition Research
            var feat1 = FeatureSelectionConfigurator.New(ArcanistOppositionResearch, ArcanistOppositionResearchGuid)
                .CopyFrom("60fda8d318134fa9a03a01ea88073854")
                .SetDisplayName(ArcanistOppositionResearchDisplayName)
                .SetDescription(ArcanistOppositionResearchDescription)
                .RemoveComponents(c => c is PrerequisiteClassLevel)
                .RemoveComponents(c => c is PrerequisiteFeature)
                .AddPrerequisiteClassLevel(CharacterClassRefs.ArcanistClass.ToString(), 10, not: false)
                .AddPrerequisiteFeature("6c29030e9fea36949877c43a6f94ff31", group: Prerequisite.GroupType.Any)
                .AddPrerequisiteFeature("d09718dd4f5958849a990e1364ac7ccb", group: Prerequisite.GroupType.Any)
                .AddPrerequisiteFeature("62a5d2fb3cfb5e849b2b35b321fb1f8f", group: Prerequisite.GroupType.Any)
                .Configure();

            var feat2 = FeatureSelectionConfigurator.For(ArcaneDiscoverySelectionGuid) // Arcane Discovery selection
                .RemoveComponents(c => c is PrerequisiteClassLevel)
                .AddPrerequisiteClassLevel(CharacterClassRefs.WizardClass.ToString(), 1, group: Prerequisite.GroupType.Any)
                .AddPrerequisiteClassLevel(CharacterClassRefs.ArcanistClass.ToString(), 1, group: Prerequisite.GroupType.Any)
                .SetIgnorePrerequisites(false)
                .SetObligatory(false)
                .AddToAllFeatures(feat1)
                //.SetRanks(20)
                .Configure();

            FeatureSelectionConfigurator.For(FeatureSelectionRefs.ArcanistExploitSelection)
                .AddToAllFeatures(feat2)
                //.SetMode(SelectionMode.Default)
                .Configure();

            FeatureSelectionConfigurator.For(FeatureSelectionRefs.ExploiterExploitSelection)
                .AddToAllFeatures(feat2)
                //.SetMode(SelectionMode.Default)
                .Configure();

            FeatureSelectionConfigurator.For(FeatureSelectionRefs.ExtraArcanistExploitSelection)
                .AddToAllFeatures(feat2)
                //.SetMode(SelectionMode.Default)
                .Configure();

            // Alchemical Affinity
            FeatureConfigurator.For("a9e14feee5154cc392e705cd740ee3ec")
                .RemoveComponents(c => c is PrerequisiteClassLevel)
                .AddPrerequisiteClassLevel(CharacterClassRefs.WizardClass.ToString(), 5, group: Prerequisite.GroupType.Any)
                .AddPrerequisiteClassLevel(CharacterClassRefs.ArcanistClass.ToString(), 10, group: Prerequisite.GroupType.Any)
                .Configure();

            // Idealize
            FeatureConfigurator.For("5e85cc0df2a54ffe9c31a60e4893c91d")
                .RemoveComponents(c => c is PrerequisiteClassLevel)
                .AddPrerequisiteClassLevel(CharacterClassRefs.WizardClass.ToString(), 10, group: Prerequisite.GroupType.Any)
                .AddPrerequisiteClassLevel(CharacterClassRefs.ArcanistClass.ToString(), 20, group: Prerequisite.GroupType.Any)
                .Configure();

            // Yuelra's Blessing
            FeatureConfigurator.For("d364f5e764134beabdf59a793a7c35f8")
                .RemoveComponents(c => c is PrerequisiteClassLevel)
                .AddPrerequisiteClassLevel(CharacterClassRefs.WizardClass.ToString(), 5, group: Prerequisite.GroupType.Any)
                .AddPrerequisiteClassLevel(CharacterClassRefs.ArcanistClass.ToString(), 10, group: Prerequisite.GroupType.Any)
                .Configure();

            if (!CheckerUtilities.GetModActive("MysticalMayhem")) return;

            // School Expertise
            FeatureConfigurator.For("f3e08b15946d47d4bee66ae0dfc1a9e0")
                .RemoveComponents(c => c is PrerequisiteClassLevel)
                .AddPrerequisiteClassLevel(CharacterClassRefs.WizardClass.ToString(), 8, group: Prerequisite.GroupType.Any)
                .AddPrerequisiteClassLevel(CharacterClassRefs.ArcanistClass.ToString(), 16, group: Prerequisite.GroupType.Any)
                .Configure();

            // Staff-Like Wand
            FeatureConfigurator.For("4dc25825ceb74933a85b2fd8d1f10e6c")
                .RemoveComponents(c => c is PrerequisiteClassLevel)
                .AddPrerequisiteClassLevel(CharacterClassRefs.WizardClass.ToString(), 11, group: Prerequisite.GroupType.Any)
                .AddPrerequisiteClassLevel(CharacterClassRefs.ArcanistClass.ToString(), 11, group: Prerequisite.GroupType.Any)
                .Configure();
        }
    }
}
